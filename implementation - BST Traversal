//c program for different tree traversals
#include<stdio.h>
#include<stdlib.h>

//A binary tree node has data,pointer to left child
//and a pointer to right child
//structure definition

struct node{
int data;
struct node*left;
struct node*right;
};

//creation of a newnode

struct node*newNode(int data)
{
  struct node*node=(struct node*)malloc(sizeof(struct node));
  node->data=data;
  node->left=NULL;
  node->right=NULL;

  return(node);
}

//Given a binary tree,print its node in inorder
void printInorder(struct node*node)
{
    if(node==NULL)
        return;
    //first recur on left side
    printInorder(node->left);
    //Then print the data of the node
    //root
    printf("%d",node->data);
    //Now recur on right child
    printInorder(node->right);

}

//print the node in preorder
void preorder(struct node *node)
{
    {
    if(node==NULL)
        return;
}
printf("%d",node->data);
preorder(node->left);
preorder(node->right);
}
void postorder(struct node*node)
{

    {
        if(node==NULL)
            return;
    }
    postorder(node->left);
    postorder(node->right);
    printf("%d",node->data);
}
int main()
{
    struct node*root=newNode(1);
    root->left=newNode(2);
    root->right=newNode(3);
    root->left->left=newNode(4);
    root->left->right=newNode(5);
    printf("\nInorder\n ");
    printInorder(root);
    printf("\nPreorder\n");
    preorder(root);
    printf("\nPostorder\n");
    postorder(root);


}
